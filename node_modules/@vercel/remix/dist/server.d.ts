/// <reference types="node" />
import "./globals";
import type { IncomingMessage, ServerResponse } from "http";
import type { AppLoadContext, ServerBuild } from "@remix-run/node";
/**
 * A function that returns the value to use as `context` in route `loader` and
 * `action` functions.
 *
 * You can think of this as an escape hatch that allows you to pass
 * environment/platform-specific values through to your loader/action.
 */
export type GetLoadContextFunction = (req: Request) => AppLoadContext;
export type RequestHandler = (req: IncomingMessage, res: ServerResponse) => Promise<void>;
/**
 * Returns a request handler for Vercel's Node.js runtime that serves the
 * response using Remix.
 */
export declare function createRequestHandler({ build, getLoadContext, mode, }: {
    build: ServerBuild;
    getLoadContext?: GetLoadContextFunction;
    mode?: string;
}): RequestHandler;
